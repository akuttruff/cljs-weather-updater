;; Analyzed by ClojureScript 1.7.170
{:use-macros {dbg reagent.debug, prn reagent.debug}, :excludes #{}, :name reagent.impl.component, :imports nil, :requires {util reagent.impl.util, reagent.impl.util reagent.impl.util, batch reagent.impl.batching, reagent.impl.batching reagent.impl.batching, ratom reagent.ratom, reagent.ratom reagent.ratom, reagent.debug reagent.debug}, :uses {cljs-argv reagent.impl.util, cljs-level reagent.impl.util, React reagent.impl.util}, :defs {get-wrapper {:protocol-inline nil, :meta {:file "/Users/akuttruff/cljs_weather_updater/resources/public/js/reagent/impl/component.cljs", :line 124, :column 7, :end-line 124, :end-column 18, :arglists (quote ([key f name]))}, :name reagent.impl.component/get-wrapper, :variadic false, :file "resources/public/js/reagent/impl/component.cljs", :end-column 18, :method-params ([key f name]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 124, :end-line 124, :max-fixed-arity 3, :fn-var true, :arglists (quote ([key f name]))}, obligatory {:name reagent.impl.component/obligatory, :file "resources/public/js/reagent/impl/component.cljs", :line 133, :column 1, :end-line 133, :end-column 16, :meta {:file "/Users/akuttruff/cljs_weather_updater/resources/public/js/reagent/impl/component.cljs", :line 133, :column 6, :end-line 133, :end-column 16}}, default-wrapper {:protocol-inline nil, :meta {:file "/Users/akuttruff/cljs_weather_updater/resources/public/js/reagent/impl/component.cljs", :line 110, :column 7, :end-line 110, :end-column 22, :arglists (quote ([f]))}, :name reagent.impl.component/default-wrapper, :variadic false, :file "resources/public/js/reagent/impl/component.cljs", :end-column 22, :method-params ([f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 110, :end-line 110, :max-fixed-arity 1, :fn-var true, :arglists (quote ([f]))}, do-render {:protocol-inline nil, :meta {:file "/Users/akuttruff/cljs_weather_updater/resources/public/js/reagent/impl/component.cljs", :line 35, :column 7, :end-line 35, :end-column 16, :arglists (quote ([C]))}, :name reagent.impl.component/do-render, :variadic false, :file "resources/public/js/reagent/impl/component.cljs", :end-column 16, :method-params ([C]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 35, :end-line 35, :max-fixed-arity 1, :fn-var true, :arglists (quote ([C]))}, add-obligatory {:protocol-inline nil, :meta {:file "/Users/akuttruff/cljs_weather_updater/resources/public/js/reagent/impl/component.cljs", :line 143, :column 7, :end-line 143, :end-column 21, :arglists (quote ([fun-map]))}, :name reagent.impl.component/add-obligatory, :variadic false, :file "resources/public/js/reagent/impl/component.cljs", :end-column 21, :method-params ([fun-map]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 143, :end-line 143, :max-fixed-arity 1, :fn-var true, :arglists (quote ([fun-map]))}, state-atom {:protocol-inline nil, :meta {:file "/Users/akuttruff/cljs_weather_updater/resources/public/js/reagent/impl/component.cljs", :line 15, :column 7, :end-line 15, :end-column 17, :arglists (quote ([this]))}, :name reagent.impl.component/state-atom, :variadic false, :file "resources/public/js/reagent/impl/component.cljs", :end-column 17, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 15, :end-line 15, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this]))}, dash-to-camel {:name reagent.impl.component/dash-to-camel, :file "resources/public/js/reagent/impl/component.cljs", :line 136, :column 1, :end-line 136, :end-column 19, :meta {:file "/Users/akuttruff/cljs_weather_updater/resources/public/js/reagent/impl/component.cljs", :line 136, :column 6, :end-line 136, :end-column 19}}, map-to-js {:protocol-inline nil, :meta {:file "/Users/akuttruff/cljs_weather_updater/resources/public/js/reagent/impl/component.cljs", :line 172, :column 7, :end-line 172, :end-column 16, :arglists (quote ([m]))}, :name reagent.impl.component/map-to-js, :variadic false, :file "resources/public/js/reagent/impl/component.cljs", :end-column 16, :method-params ([m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 172, :end-line 172, :max-fixed-arity 1, :fn-var true, :arglists (quote ([m]))}, dont-wrap {:name reagent.impl.component/dont-wrap, :file "resources/public/js/reagent/impl/component.cljs", :line 116, :column 1, :end-line 116, :end-column 15, :meta {:file "/Users/akuttruff/cljs_weather_updater/resources/public/js/reagent/impl/component.cljs", :line 116, :column 6, :end-line 116, :end-column 15}}, state {:protocol-inline nil, :meta {:file "/Users/akuttruff/cljs_weather_updater/resources/public/js/reagent/impl/component.cljs", :line 21, :column 7, :end-line 21, :end-column 12, :arglists (quote ([this]))}, :name reagent.impl.component/state, :variadic false, :file "resources/public/js/reagent/impl/component.cljs", :end-column 12, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 21, :end-line 21, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this]))}, *current-component* {:name reagent.impl.component/*current-component*, :file "resources/public/js/reagent/impl/component.cljs", :line 8, :column 1, :end-line 8, :end-column 39, :dynamic true, :declared true, :meta {:file "/Users/akuttruff/cljs_weather_updater/resources/public/js/reagent/impl/component.cljs", :line 8, :column 20, :end-line 8, :end-column 39, :dynamic true, :declared true}}, cljs-state {:name reagent.impl.component/cljs-state, :file "resources/public/js/reagent/impl/component.cljs", :line 10, :column 1, :end-line 10, :end-column 16, :meta {:file "/Users/akuttruff/cljs_weather_updater/resources/public/js/reagent/impl/component.cljs", :line 10, :column 6, :end-line 10, :end-column 16}}, camelify-map-keys {:protocol-inline nil, :meta {:file "/Users/akuttruff/cljs_weather_updater/resources/public/js/reagent/impl/component.cljs", :line 138, :column 7, :end-line 138, :end-column 24, :arglists (quote ([fun-map]))}, :name reagent.impl.component/camelify-map-keys, :variadic false, :file "resources/public/js/reagent/impl/component.cljs", :end-column 24, :method-params ([fun-map]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 138, :end-line 138, :max-fixed-arity 1, :fn-var true, :arglists (quote ([fun-map]))}, replace-state {:protocol-inline nil, :meta {:file "/Users/akuttruff/cljs_weather_updater/resources/public/js/reagent/impl/component.cljs", :line 24, :column 7, :end-line 24, :end-column 20, :arglists (quote ([this new-state]))}, :name reagent.impl.component/replace-state, :variadic false, :file "resources/public/js/reagent/impl/component.cljs", :end-column 20, :method-params ([this new-state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 24, :end-line 24, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this new-state]))}, cljsify {:protocol-inline nil, :meta {:file "/Users/akuttruff/cljs_weather_updater/resources/public/js/reagent/impl/component.cljs", :line 178, :column 7, :end-line 178, :end-column 14, :arglists (quote ([body]))}, :name reagent.impl.component/cljsify, :variadic false, :file "resources/public/js/reagent/impl/component.cljs", :end-column 14, :method-params ([body]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 178, :end-line 178, :max-fixed-arity 1, :fn-var true, :arglists (quote ([body]))}, dont-bind {:protocol-inline nil, :meta {:file "/Users/akuttruff/cljs_weather_updater/resources/public/js/reagent/impl/component.cljs", :line 118, :column 7, :end-line 118, :end-column 16, :arglists (quote ([f]))}, :name reagent.impl.component/dont-bind, :variadic false, :file "resources/public/js/reagent/impl/component.cljs", :end-column 16, :method-params ([f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 118, :end-line 118, :max-fixed-arity 1, :fn-var true, :arglists (quote ([f]))}, set-state {:protocol-inline nil, :meta {:file "/Users/akuttruff/cljs_weather_updater/resources/public/js/reagent/impl/component.cljs", :line 29, :column 7, :end-line 29, :end-column 16, :arglists (quote ([this new-state]))}, :name reagent.impl.component/set-state, :variadic false, :file "resources/public/js/reagent/impl/component.cljs", :end-column 16, :method-params ([this new-state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 29, :end-line 29, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this new-state]))}, add-render {:protocol-inline nil, :meta {:file "/Users/akuttruff/cljs_weather_updater/resources/public/js/reagent/impl/component.cljs", :line 146, :column 7, :end-line 146, :end-column 17, :arglists (quote ([fun-map render-f]))}, :name reagent.impl.component/add-render, :variadic false, :file "resources/public/js/reagent/impl/component.cljs", :end-column 17, :method-params ([fun-map render-f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 146, :end-line 146, :max-fixed-arity 2, :fn-var true, :arglists (quote ([fun-map render-f]))}, cljs-render {:name reagent.impl.component/cljs-render, :file "resources/public/js/reagent/impl/component.cljs", :line 11, :column 1, :end-line 11, :end-column 17, :meta {:file "/Users/akuttruff/cljs_weather_updater/resources/public/js/reagent/impl/component.cljs", :line 11, :column 6, :end-line 11, :end-column 17}}, custom-wrapper {:protocol-inline nil, :meta {:file "/Users/akuttruff/cljs_weather_updater/resources/public/js/reagent/impl/component.cljs", :line 62, :column 7, :end-line 62, :end-column 21, :arglists (quote ([key f]))}, :name reagent.impl.component/custom-wrapper, :variadic false, :file "resources/public/js/reagent/impl/component.cljs", :end-column 21, :method-params ([key f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 62, :end-line 62, :max-fixed-arity 2, :fn-var true, :arglists (quote ([key f]))}, create-class {:protocol-inline nil, :meta {:file "/Users/akuttruff/cljs_weather_updater/resources/public/js/reagent/impl/component.cljs", :line 185, :column 7, :end-line 185, :end-column 19, :arglists (quote ([body as-component]))}, :name reagent.impl.component/create-class, :variadic false, :file "resources/public/js/reagent/impl/component.cljs", :end-column 19, :method-params ([body as-component]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 185, :end-line 185, :max-fixed-arity 2, :fn-var true, :arglists (quote ([body as-component]))}, wrap-funs {:protocol-inline nil, :meta {:file "/Users/akuttruff/cljs_weather_updater/resources/public/js/reagent/impl/component.cljs", :line 155, :column 7, :end-line 155, :end-column 16, :arglists (quote ([fun-map]))}, :name reagent.impl.component/wrap-funs, :variadic false, :file "resources/public/js/reagent/impl/component.cljs", :end-column 16, :method-params ([fun-map]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 155, :end-line 155, :max-fixed-arity 1, :fn-var true, :arglists (quote ([fun-map]))}}, :require-macros {reagent.debug reagent.debug}, :cljs.analyzer/constants {:seen #{body render-fun :displayName :cljsRender map? :componentWillUnmount :shouldComponentUpdate :render ifn? :componentFunction util/clj-ifn? f}, :order [util/clj-ifn? f :cljsRender :render :componentFunction ifn? :shouldComponentUpdate :componentWillUnmount render-fun :displayName map? body]}, :doc nil}