;; Analyzed by ClojureScript 1.7.170
{:use-macros {log reagent.debug, dbg reagent.debug}, :excludes #{}, :name reagent.impl.util, :imports nil, :requires {reagent.debug reagent.debug, reactimport reagent.impl.reactimport, reagent.impl.reactimport reagent.impl.reactimport, string clojure.string, clojure.string clojure.string}, :uses nil, :defs {get-props {:protocol-inline nil, :meta {:file "/Users/akuttruff/cljs_weather_updater/resources/public/js/reagent/impl/util.cljs", :line 33, :column 7, :end-line 33, :end-column 16, :arglists (quote ([C]))}, :name reagent.impl.util/get-props, :variadic false, :file "resources/public/js/reagent/impl/util.cljs", :end-column 16, :method-params ([C]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 33, :end-line 33, :max-fixed-arity 1, :fn-var true, :arglists (quote ([C]))}, get-argv {:protocol-inline nil, :meta {:file "/Users/akuttruff/cljs_weather_updater/resources/public/js/reagent/impl/util.cljs", :line 30, :column 7, :end-line 30, :end-column 15, :arglists (quote ([C]))}, :name reagent.impl.util/get-argv, :variadic false, :file "resources/public/js/reagent/impl/util.cljs", :end-column 15, :method-params ([C]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 30, :end-line 30, :max-fixed-arity 1, :fn-var true, :arglists (quote ([C]))}, merge-props {:protocol-inline nil, :meta {:file "/Users/akuttruff/cljs_weather_updater/resources/public/js/reagent/impl/util.cljs", :line 106, :column 7, :end-line 106, :end-column 18, :arglists (quote ([p1 p2]))}, :name reagent.impl.util/merge-props, :variadic false, :file "resources/public/js/reagent/impl/util.cljs", :end-column 18, :method-params ([p1 p2]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 106, :end-line 106, :max-fixed-arity 2, :fn-var true, :arglists (quote ([p1 p2]))}, cljs-argv {:name reagent.impl.util/cljs-argv, :file "resources/public/js/reagent/impl/util.cljs", :line 15, :column 1, :end-line 15, :end-column 15, :meta {:file "/Users/akuttruff/cljs_weather_updater/resources/public/js/reagent/impl/util.cljs", :line 15, :column 6, :end-line 15, :end-column 15}}, capitalize {:protocol-inline nil, :meta {:file "/Users/akuttruff/cljs_weather_updater/resources/public/js/reagent/impl/util.cljs", :line 57, :column 7, :end-line 57, :end-column 17, :arglists (quote ([s]))}, :name reagent.impl.util/capitalize, :variadic false, :file "resources/public/js/reagent/impl/util.cljs", :end-column 17, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 57, :end-line 57, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s]))}, props {:name reagent.impl.util/props, :file "resources/public/js/reagent/impl/util.cljs", :line 13, :column 1, :end-line 13, :end-column 11, :meta {:file "/Users/akuttruff/cljs_weather_updater/resources/public/js/reagent/impl/util.cljs", :line 13, :column 6, :end-line 13, :end-column 11}}, js-props {:protocol-inline nil, :meta {:file "/Users/akuttruff/cljs_weather_updater/resources/public/js/reagent/impl/util.cljs", :line 17, :column 7, :end-line 17, :end-column 15, :arglists (quote ([C]))}, :name reagent.impl.util/js-props, :variadic false, :file "resources/public/js/reagent/impl/util.cljs", :end-column 15, :method-params ([C]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 17, :end-line 17, :max-fixed-arity 1, :fn-var true, :arglists (quote ([C]))}, dash-to-camel {:protocol-inline nil, :meta {:file "/Users/akuttruff/cljs_weather_updater/resources/public/js/reagent/impl/util.cljs", :line 62, :column 7, :end-line 62, :end-column 20, :arglists (quote ([dashed]))}, :name reagent.impl.util/dash-to-camel, :variadic false, :file "resources/public/js/reagent/impl/util.cljs", :end-column 20, :method-params ([dashed]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 62, :end-line 62, :max-fixed-arity 1, :fn-var true, :arglists (quote ([dashed]))}, reagent-component? {:protocol-inline nil, :meta {:file "/Users/akuttruff/cljs_weather_updater/resources/public/js/reagent/impl/util.cljs", :line 39, :column 7, :end-line 39, :end-column 25, :arglists (quote ([C]))}, :name reagent.impl.util/reagent-component?, :variadic false, :file "resources/public/js/reagent/impl/util.cljs", :end-column 25, :method-params ([C]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 39, :end-line 39, :max-fixed-arity 1, :fn-var true, :arglists (quote ([C]))}, dont-camel-case {:name reagent.impl.util/dont-camel-case, :file "resources/public/js/reagent/impl/util.cljs", :line 55, :column 1, :end-line 55, :end-column 21, :meta {:file "/Users/akuttruff/cljs_weather_updater/resources/public/js/reagent/impl/util.cljs", :line 55, :column 6, :end-line 55, :end-column 21}}, merge-style {:protocol-inline nil, :meta {:file "/Users/akuttruff/cljs_weather_updater/resources/public/js/reagent/impl/util.cljs", :line 98, :column 8, :end-line 98, :end-column 19, :private true, :arglists (quote ([p1 p2]))}, :private true, :name reagent.impl.util/merge-style, :variadic false, :file "resources/public/js/reagent/impl/util.cljs", :end-column 19, :method-params ([p1 p2]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 98, :end-line 98, :max-fixed-arity 2, :fn-var true, :arglists (quote ([p1 p2]))}, memoize-1 {:protocol-inline nil, :meta {:file "/Users/akuttruff/cljs_weather_updater/resources/public/js/reagent/impl/util.cljs", :line 45, :column 7, :end-line 45, :end-column 16, :arglists (quote ([f]))}, :name reagent.impl.util/memoize-1, :variadic false, :file "resources/public/js/reagent/impl/util.cljs", :end-column 16, :method-params ([f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 45, :end-line 45, :max-fixed-arity 1, :fn-var true, :arglists (quote ([f]))}, ->partial-ifn {:protocol-inline nil, :meta {:file "/Users/akuttruff/cljs_weather_updater/resources/public/js/reagent/impl/util.cljs", :line 72, :column 10, :end-line 72, :end-column 21, :protocols #{cljs.core/IEquiv cljs.core/IHash cljs.core/IFn}, :skip-protocol-flag #{cljs.core/IEquiv cljs.core/IHash cljs.core/IFn}, :factory :positional, :arglists (quote ([f args p]))}, :protocols #{cljs.core/IEquiv cljs.core/IHash cljs.core/IFn}, :name reagent.impl.util/->partial-ifn, :variadic false, :file "resources/public/js/reagent/impl/util.cljs", :end-column 21, :method-params ([f args p]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :factory :positional, :line 72, :end-line 72, :max-fixed-arity 3, :fn-var true, :arglists (quote ([f args p])), :skip-protocol-flag #{cljs.core/IEquiv cljs.core/IHash cljs.core/IFn}}, extract-children {:protocol-inline nil, :meta {:file "/Users/akuttruff/cljs_weather_updater/resources/public/js/reagent/impl/util.cljs", :line 24, :column 7, :end-line 24, :end-column 23, :arglists (quote ([v]))}, :name reagent.impl.util/extract-children, :variadic false, :file "resources/public/js/reagent/impl/util.cljs", :end-column 23, :method-params ([v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 24, :end-line 24, :max-fixed-arity 1, :fn-var true, :arglists (quote ([v]))}, extract-props {:protocol-inline nil, :meta {:file "/Users/akuttruff/cljs_weather_updater/resources/public/js/reagent/impl/util.cljs", :line 20, :column 7, :end-line 20, :end-column 20, :arglists (quote ([v]))}, :name reagent.impl.util/extract-props, :variadic false, :file "resources/public/js/reagent/impl/util.cljs", :end-column 20, :method-params ([v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 20, :end-line 20, :max-fixed-arity 1, :fn-var true, :arglists (quote ([v]))}, equal-args {:protocol-inline nil, :meta {:file "/Users/akuttruff/cljs_weather_updater/resources/public/js/reagent/impl/util.cljs", :line 141, :column 7, :end-line 141, :end-column 17, :arglists (quote ([v1 v2]))}, :name reagent.impl.util/equal-args, :variadic false, :file "resources/public/js/reagent/impl/util.cljs", :end-column 17, :method-params ([v1 v2]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 141, :end-line 141, :max-fixed-arity 2, :fn-var true, :arglists (quote ([v1 v2]))}, partial-ifn {:num-fields 3, :protocols #{cljs.core/IEquiv cljs.core/IHash cljs.core/IFn}, :name reagent.impl.util/partial-ifn, :file "resources/public/js/reagent/impl/util.cljs", :end-column 21, :type true, :column 10, :line 72, :record false, :end-line 72, :skip-protocol-flag #{cljs.core/IEquiv cljs.core/IHash cljs.core/IFn}}, get-children {:protocol-inline nil, :meta {:file "/Users/akuttruff/cljs_weather_updater/resources/public/js/reagent/impl/util.cljs", :line 36, :column 7, :end-line 36, :end-column 19, :arglists (quote ([C]))}, :name reagent.impl.util/get-children, :variadic false, :file "resources/public/js/reagent/impl/util.cljs", :end-column 19, :method-params ([C]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 36, :end-line 36, :max-fixed-arity 1, :fn-var true, :arglists (quote ([C]))}, merge-class {:protocol-inline nil, :meta {:file "/Users/akuttruff/cljs_weather_updater/resources/public/js/reagent/impl/util.cljs", :line 90, :column 8, :end-line 90, :end-column 19, :private true, :arglists (quote ([p1 p2]))}, :private true, :name reagent.impl.util/merge-class, :variadic false, :file "resources/public/js/reagent/impl/util.cljs", :end-column 19, :method-params ([p1 p2]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 90, :end-line 90, :max-fixed-arity 2, :fn-var true, :arglists (quote ([p1 p2]))}, cljs-level {:name reagent.impl.util/cljs-level, :file "resources/public/js/reagent/impl/util.cljs", :line 14, :column 1, :end-line 14, :end-column 16, :meta {:file "/Users/akuttruff/cljs_weather_updater/resources/public/js/reagent/impl/util.cljs", :line 14, :column 6, :end-line 14, :end-column 16}}, is-client {:name reagent.impl.util/is-client, :file "resources/public/js/reagent/impl/util.cljs", :line 6, :column 1, :end-line 6, :end-column 15, :meta {:file "/Users/akuttruff/cljs_weather_updater/resources/public/js/reagent/impl/util.cljs", :line 6, :column 6, :end-line 6, :end-column 15}}, clj-ifn? {:protocol-inline nil, :meta {:file "/Users/akuttruff/cljs_weather_updater/resources/public/js/reagent/impl/util.cljs", :line 86, :column 7, :end-line 86, :end-column 15, :arglists (quote ([x]))}, :name reagent.impl.util/clj-ifn?, :variadic false, :file "resources/public/js/reagent/impl/util.cljs", :end-column 15, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 86, :end-line 86, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, React {:name reagent.impl.util/React, :file "resources/public/js/reagent/impl/util.cljs", :line 9, :column 1, :end-line 9, :end-column 11, :meta {:file "/Users/akuttruff/cljs_weather_updater/resources/public/js/reagent/impl/util.cljs", :line 9, :column 6, :end-line 9, :end-column 11}}, shallow-equal-maps {:protocol-inline nil, :meta {:file "/Users/akuttruff/cljs_weather_updater/resources/public/js/reagent/impl/util.cljs", :line 124, :column 7, :end-line 124, :end-column 25, :arglists (quote ([x y]))}, :name reagent.impl.util/shallow-equal-maps, :variadic false, :file "resources/public/js/reagent/impl/util.cljs", :end-column 25, :method-params ([x y]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 124, :end-line 124, :max-fixed-arity 2, :fn-var true, :arglists (quote ([x y]))}, identical-ish? {:protocol-inline nil, :meta {:file "/Users/akuttruff/cljs_weather_updater/resources/public/js/reagent/impl/util.cljs", :line 118, :column 7, :end-line 118, :end-column 21, :arglists (quote ([x y]))}, :name reagent.impl.util/identical-ish?, :variadic false, :file "resources/public/js/reagent/impl/util.cljs", :end-column 21, :method-params ([x y]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 118, :end-line 118, :max-fixed-arity 2, :fn-var true, :arglists (quote ([x y]))}, -not-found {:name reagent.impl.util/-not-found, :file "resources/public/js/reagent/impl/util.cljs", :line 116, :column 1, :end-line 116, :end-column 16, :meta {:file "/Users/akuttruff/cljs_weather_updater/resources/public/js/reagent/impl/util.cljs", :line 116, :column 6, :end-line 116, :end-column 16}}}, :require-macros {reagent.debug reagent.debug}, :cljs.analyzer/constants {:seen #{vector? p :else v2 args map? v1 :style :class p1 :mutable f}, :order [:else f args p :mutable :class :style map? p1 vector? v1 v2]}, :doc nil}