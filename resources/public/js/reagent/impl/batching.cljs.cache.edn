;; Analyzed by ClojureScript 1.7.170
{:use-macros {log reagent.debug, dbg reagent.debug}, :excludes #{flush}, :name reagent.impl.batching, :imports nil, :requires {reagent.debug reagent.debug, ratom reagent.ratom, reagent.ratom reagent.ratom, reagent.impl.util reagent.impl.util, string clojure.string, clojure.string clojure.string}, :uses {cljs-level reagent.impl.util, is-client reagent.impl.util}, :defs {fake-raf {:protocol-inline nil, :meta {:file "/Users/akuttruff/cljs_weather_updater/resources/public/js/reagent/impl/batching.cljs", :line 10, :column 7, :end-line 10, :end-column 15, :arglists (quote ([f]))}, :name reagent.impl.batching/fake-raf, :variadic false, :file "resources/public/js/reagent/impl/batching.cljs", :end-column 15, :method-params ([f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 10, :end-line 10, :max-fixed-arity 1, :fn-var true, :arglists (quote ([f]))}, run-reactively {:protocol-inline nil, :meta {:file "/Users/akuttruff/cljs_weather_updater/resources/public/js/reagent/impl/batching.cljs", :line 70, :column 7, :end-line 70, :end-column 21, :arglists (quote ([C run]))}, :name reagent.impl.batching/run-reactively, :variadic false, :file "resources/public/js/reagent/impl/batching.cljs", :end-column 21, :method-params ([C run]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 70, :end-line 70, :max-fixed-arity 2, :fn-var true, :arglists (quote ([C run]))}, queue-render {:protocol-inline nil, :meta {:file "/Users/akuttruff/cljs_weather_updater/resources/public/js/reagent/impl/batching.cljs", :line 56, :column 7, :end-line 56, :end-column 19, :arglists (quote ([C]))}, :name reagent.impl.batching/queue-render, :variadic false, :file "resources/public/js/reagent/impl/batching.cljs", :end-column 19, :method-params ([C]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 56, :end-line 56, :max-fixed-arity 1, :fn-var true, :arglists (quote ([C]))}, next-tick {:name reagent.impl.batching/next-tick, :file "resources/public/js/reagent/impl/batching.cljs", :line 13, :column 1, :end-line 13, :end-column 15, :meta {:file "/Users/akuttruff/cljs_weather_updater/resources/public/js/reagent/impl/batching.cljs", :line 13, :column 6, :end-line 13, :end-column 15}}, flush {:protocol-inline nil, :meta {:file "/Users/akuttruff/cljs_weather_updater/resources/public/js/reagent/impl/batching.cljs", :line 53, :column 7, :end-line 53, :end-column 12, :arglists (quote ([]))}, :name reagent.impl.batching/flush, :variadic false, :file "resources/public/js/reagent/impl/batching.cljs", :end-column 12, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 53, :end-line 53, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, mark-rendered {:protocol-inline nil, :meta {:file "/Users/akuttruff/cljs_weather_updater/resources/public/js/reagent/impl/batching.cljs", :line 60, :column 7, :end-line 60, :end-column 20, :arglists (quote ([C]))}, :name reagent.impl.batching/mark-rendered, :variadic false, :file "resources/public/js/reagent/impl/batching.cljs", :end-column 20, :method-params ([C]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 60, :end-line 60, :max-fixed-arity 1, :fn-var true, :arglists (quote ([C]))}, render-queue {:name reagent.impl.batching/render-queue, :file "resources/public/js/reagent/impl/batching.cljs", :line 51, :column 1, :end-line 51, :end-column 18, :meta {:file "/Users/akuttruff/cljs_weather_updater/resources/public/js/reagent/impl/batching.cljs", :line 51, :column 6, :end-line 51, :end-column 18}}, RenderQueue {:num-fields 2, :protocols #{reagent.impl.batching/Object}, :name reagent.impl.batching/RenderQueue, :file "resources/public/js/reagent/impl/batching.cljs", :end-column 21, :type true, :column 10, :line 36, :record false, :end-line 36, :skip-protocol-flag nil}, ->RenderQueue {:protocol-inline nil, :meta {:file "/Users/akuttruff/cljs_weather_updater/resources/public/js/reagent/impl/batching.cljs", :line 36, :column 10, :end-line 36, :end-column 21, :protocols #{reagent.impl.batching/Object}, :skip-protocol-flag nil, :factory :positional, :arglists (quote ([queue scheduled?]))}, :protocols #{reagent.impl.batching/Object}, :name reagent.impl.batching/->RenderQueue, :variadic false, :file "resources/public/js/reagent/impl/batching.cljs", :end-column 21, :method-params ([queue scheduled?]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :factory :positional, :line 36, :end-line 36, :max-fixed-arity 2, :fn-var true, :arglists (quote ([queue scheduled?])), :skip-protocol-flag nil}, is-reagent-component {:protocol-inline nil, :meta {:file "/Users/akuttruff/cljs_weather_updater/resources/public/js/reagent/impl/batching.cljs", :line 65, :column 7, :end-line 65, :end-column 27, :arglists (quote ([C]))}, :name reagent.impl.batching/is-reagent-component, :variadic false, :file "resources/public/js/reagent/impl/batching.cljs", :end-column 27, :method-params ([C]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 65, :end-line 65, :max-fixed-arity 1, :fn-var true, :arglists (quote ([C]))}, run-queue {:protocol-inline nil, :meta {:file "/Users/akuttruff/cljs_weather_updater/resources/public/js/reagent/impl/batching.cljs", :line 27, :column 7, :end-line 27, :end-column 16, :arglists (quote ([a]))}, :name reagent.impl.batching/run-queue, :variadic false, :file "resources/public/js/reagent/impl/batching.cljs", :end-column 16, :method-params ([a]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 27, :end-line 27, :max-fixed-arity 1, :fn-var true, :arglists (quote ([a]))}, compare-levels {:protocol-inline nil, :meta {:file "/Users/akuttruff/cljs_weather_updater/resources/public/js/reagent/impl/batching.cljs", :line 23, :column 7, :end-line 23, :end-column 21, :arglists (quote ([c1 c2]))}, :name reagent.impl.batching/compare-levels, :variadic false, :file "resources/public/js/reagent/impl/batching.cljs", :end-column 21, :method-params ([c1 c2]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 23, :end-line 23, :max-fixed-arity 2, :fn-var true, :arglists (quote ([c1 c2]))}, dispose {:protocol-inline nil, :meta {:file "/Users/akuttruff/cljs_weather_updater/resources/public/js/reagent/impl/batching.cljs", :line 85, :column 7, :end-line 85, :end-column 14, :arglists (quote ([C]))}, :name reagent.impl.batching/dispose, :variadic false, :file "resources/public/js/reagent/impl/batching.cljs", :end-column 14, :method-params ([C]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 85, :end-line 85, :max-fixed-arity 1, :fn-var true, :arglists (quote ([C]))}}, :require-macros {reagent.debug reagent.debug}, :cljs.analyzer/constants {:seen #{:derefed queue scheduled? C :auto-run :mutable is-reagent-component}, :order [queue :mutable scheduled? is-reagent-component C :auto-run :derefed]}, :doc nil}